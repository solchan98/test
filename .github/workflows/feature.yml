name: Test

on:
  push:
    branches:
      - main

jobs:
  front-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build
        run: |
            cd frontend
            npm install
            CI="" npm run build
            mkdir -p dist/src/assets
            cp src/assets/* dist/src/assets/
            tar -cvf dist.tar dist

      - name: Publish
        uses: nogsantos/scp-deploy@master
        with:
          src: /home/runner/work/test/test/frontend/dist.tar
          host: ${{ secrets.REMOTE_IP }}
          remote: /home/ubuntu
          port: 22
          user: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            sudo rm -rf dist
            sudo tar -xvf dist.tar
            sudo systemctl reload nginx

  back-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Properties
        run: |
                cd backend
                mkdir -p ./src/main/resources
                echo "${{ secrets.APP_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build With Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: 'build -x test'

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: dorothy5z/dorothy
          tags: "latest"

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            sudo docker rm -f dorothy
            sudo docker run --name dorothy -d -p 8080:8080 --network dorothy-network dorothy5z/dorothy:latest
            sudo docker image prune -f
